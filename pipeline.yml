inspect:
  path : './data/inspect'
preprocess:
  prepare:
    epoch_length : 5
    downsample : 500
    ica_method : 'fastica'
    skip_prep : False
    skip_reject : True
  overwrite : True

prep_inspection:
  path : './data/prep_inspection'
  overwrite : True

features:
  pipeline_name : 'features-epochs'
  downsample : 500
  prefilter :
    l_freq : 1
    h_freq : 30
  keep_channels : False
  feature_list: # To say which features actually compute rather than configure
    - FooofFromAverage
    - PowerSpectrum
    - RelativeBandPower1
    - RelativeBandPower2
  feature_cfg: # You can configure different features for the same function but different args
    # The suffix will be the higher hierarchy name you put here
    PowerSpectrum:
      overwrite : False
      chain: # Chain is a list of either dict of defined functions (outputs not saved) or dict of defined features (output saved)
      # input of chain is assumed to be mne epochs unless it first item is directly a feature
      - function : spectrum_multitaper
        args:
          multitaper:
            adaptive : False
            low_bias : True
            normalization : 'full'
            verbose : 0
    RelativeBandPower1:
      overwrite : False
      chain :
        - feature : PowerSpectrum # this will save PowerSpectrum if not already saved
        - function: relative_bandpower
          args :
            bands:
              delta : [1,4]
              theta : [4,8]
              alpha : [8,13]
              beta  : [13,30]
              pre_alpha : [5.5,8]
              slow_theta : [4,5.5]
            multitaper : {}
            agg_fun : "eval%lambda x: agg_numpy(x,np.mean,axisname='epochs',max_numitem=24)" # You can set up max epochs by max_numitem obtained from prep_inspection
    RelativeBandPower2:
      overwrite : False
      chain :
        - feature : PowerSpectrum
        - function: relative_bandpower
          args :
            bands:
              alpha1 : [8.5, 10.5]
              alpha2 : [10.5, 12.5]
              beta1  : [12.5, 18.5]
              beta2  : [18.5, 21]
              beta3  : [21, 30]
            multitaper : {}
            agg_fun : "eval%lambda x: agg_numpy(x,np.mean,axisname='epochs',max_numitem=24)" # You can set up max epochs by max_numitem obtained from prep_inspection
    FooofFromAverage:
      overwrite : False
      chain:
        - feature : PowerSpectrum
        - function : fooof_from_average
          args :
            agg_fun : "eval%lambda x: agg_numpy(x,np.mean,axisname='epochs',max_numitem=24)" # You can set up max epochs by max_numitem obtained from prep_inspection
            internal_kwargs:
              FOOOF:
                aperiodic_mode : knee
              fit:
                freq_range : [2,35]

aggregate:
  path : './data/aggregate'
  filename : 'multidataset.csv'
  id_splitter : '/'
  feature_return:
    RelativeBandPower1: # Could be the original name or a post-processed name
      return_function : "eval%lambda x: x"
      file_suffix : RelativeBandPower1

  feature_list: # CHOOSE FEATURES WITH SAME DIMENSIONS, OTHERWISE THE DATAFRAME CANT BE MADE
    - RelativeBandPower1 # could be the original name or a post-processed name
    #- RelativeBandPower2

scalingAndFolding:
  MAX_FEATURES: null
  path : './data/scalingAndFolding'
  random_state : 0
  targets :
    - 'age'
  dropsToOnlyFeatures: # the targets will be appended to this in the script
    - id
    - sex
    - group
    - dataset
    - subject
    - task
  stratifiedvars :
    - dataset
    - group
    - sex
  scalings : # dont use _ - in the name (bids-like)
    scalingCombat : # name of this particular scaling config
        method : 'reCombat'
        init:
          parametric : True
          model : 'elastic_net'
          config : 
            alpha : 0.00001
          n_jobs : 7
          verbose : True
        covars :
          - dataset
          - sex
          - age
          - group
        batch : dataset # which should be the one we drop from covars for the design matrix X in combat
        rename :
          age : age_numerical
        categorical :
          - dataset
          - group
          - sex
    scalingStandard:
      method : 'StandardScaler'
  splits : # dont use _ - in the name (bids-like)
    folding:
      method : 'StratifiedKFold'
      num_folds: 5 # stratified by combination by default
    trainTestSplit:
      method : 'train_test_split'
      test_ratio : 0.3
      stratify : True # Based on combination, see script for meaning...
    all :
      method : 'all'
  visualizations:
    PCAviz:
      method : 'PCA'
      n_components : 2
      color_by : dataset
      colormap : 'viridis'
  featurewiz:
    init:
      corr_limit : 0.75
      feature_engg : ''
      category_encoders : ''
      dask_xgboost_flag : False
      nrows : null # Dont use None here
      verbose : 0

ml:
  path: './data/ml'
  models:
    automljar :
      method : AutoMLjar
      init :
        algorithms :
          - 'Baseline'
          - 'Linear'
          - 'Decision Tree'
          # - 'Random Forest'
          # - 'Extra Trees'
          - 'LightGBM'
          - 'Xgboost'
          - 'CatBoost'
          # - 'Neural Network'
          # - 'Nearest Neighbors'
        explain_level : 1
        ml_task : 'auto'
        mode : Explain
        eval_metric : 'rmse'
        validation_strategy : 
          validation_type : custom
        model_time_limit : 3600
        n_jobs : 1

    autogluon:
      method: AutoGluon
      init:
        problem_type: 'regression'
        eval_metric: 'root_mean_squared_error'
        verbosity: 2
        log_to_file: True
        sample_weight: null
        groups: null
      fit :
        tuning_data : null
        time_limit : null
        presets : null
        hyperparameters : null
        feature_metadata : 'infer'
        infer_limit : null 
        infer_limit_batch_size : null
        fit_weighted_ensemble : True
        fit_full_last_level_weighted_ensemble : True
        full_weighted_ensemble_additionally  : False
        dynamic_stacking : False
        calibrate_decision_threshold : False
        num_cpus : 10
        num_gpus : auto
        num_bag_folds : 0



